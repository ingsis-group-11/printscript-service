name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Checkout del código
      - name: Checkout Code
        uses: actions/checkout@v3

      # Paso 2: Configurar JDK
      - name: Config JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # Paso 3: Configurar Gradle Cache
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Paso 4: Iniciar sesión en GitHub Container Registry
      - name: Login GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Paso 5: Establecer el tag de la imagen según la rama
      - name: Set Docker Image Tag
        id: get-tag
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "TAG=latest" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/dev" ]; then
            echo "TAG=dev" >> $GITHUB_ENV
          else
            echo "TAG=other" >> $GITHUB_ENV
          fi

      # Paso 6: Crear los archivos secretos temporales
      - name: Create Secrets Files
        run: |
          echo "${{ secrets.GPR_USER }}" > gpr_user.txt
          echo "${{ secrets.GPR_TOKEN }}" > gpr_token.txt

      # Paso 7: Construir la imagen Docker con los secretos
      - name: Build Docker Image
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker build --secret id=gpr_user,src=gpr_user.txt \
                       --secret id=gpr_token,src=gpr_token.txt \
                       -t ghcr.io/${{ github.repository }}:${{ env.TAG }} .

      # Paso 8: Push de la imagen Docker a GHCR
      - name: Push Docker Image
        run: |
          docker push ghcr.io/${{ github.repository }}:${{ env.TAG }}

      # Paso 9: Limpiar los archivos secretos
      - name: Clean up Secrets
        run: |
          rm -f gpr_user.txt gpr_token.txt
